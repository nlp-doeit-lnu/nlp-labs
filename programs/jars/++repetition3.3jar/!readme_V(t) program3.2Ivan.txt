Встановлення програми:


1.Отримати вихідні файли програми.


2.Встановити JDK 18.0.1 з офіційного сайту Oracle (вибравши на сайті 
свою операційну систему). Посилання 
https://www.oracle.com/java/technologies/javase/jdk18-archive-downloads.html

3.

Якщо в вас Windows, то достатньо запустити файл Executable.bat. 
Якщо Mac або інша система, то треба скачати останню версію javafx-sdk для своєї 
операційної системи з офіційного сайту Gluon 
(https://gluonhq.com/products/javafx/), вибравши 
свою систему, розрядність процесора та збірку (вона має бути sdk). Розпакувати 
архів в папку проекту та вказати шлях в файлі Executable.bat на підпапку lib 
яка буде в архіві. При цьому варто звернути увагу, що знаки "слеш" пишуться в іншу 
сторону на ОС Mac\Linux, на відміну від Windows.
   
4.Запустити Executable.bat


                      Тонкощі роботи програми:

1. Коли міняти тип аналізу в режимі аналізу слів чи знаків вдруге (від початку 
запуску програми, в межах того самого відкритого тексту), то в файл буде записуватися 
результат спочатку першого аналізу, а потім вже другого!!! тОму програму треба 
повторно запускати, а не користуватися її поточною семією!!!


2. Однак якщо відкривати інший текст, то регістр обнуляється -- і в файл не буде 
записуватися нічого зайвого.


3. Із вбудованим Minifier ситуація із п.2 не повторюється, і обраховується він коректно, 
незалежно від того, скільки разів був проведений аналіз.


4. Якщо в Minifier задати значення кроку step=1, то обрахунок миттєвий. 
Якщо це значення буде приблизно від 30 до 2 в напрямку спадання (все залежить від 
обчислювальних можливостей комп'ютера) то програма працює коректно, однак час 
обрахунку значно збільшується. Тому рекомендовано не задавати малі значення кроку, 
або задавати крок=1.



5. При обчисленні середнього значення та 
середньо-квадратичного відхилення також не варто обирати більші значення 
початку start, аніж є символів чи слів у тексті, інакше треба буде повторити спробу 
обрахунку, тобто наново відкрити вікно.



6. Коли обчислюєте середнє значення та 
середньо-квадратичне відхилення, не потрібно вводити значення в поля, які 
відносяться до Minifier (перші два поля мають бути пусті).



7. Крок, очевидно, не варто також задавати більшим, ніж є слів чи знаків в тексті, 
інакше треба буде перезапустити програму.



8. При першій спробі обчислити середнє значення та 
середньо-квадратичне відхилення програма автоматично підставить значення 
кроку=1, а початок буде з 0-го символа чи слова (тобто по факту обрахунок буде іти 
з 1-го елемента).



9. Якщо є проблеми із записом в файл, то перезапустити програму, або вибрати 
інший текст.



10. "Save each *n" еквівалентно кроку step, в меню нижче.



11. "Start from" еквівалентно вибраному масиву, для прикладу з 1000-го елемента до 
кінця масиву.



12. При роботі з Minifier (два перші поля і перша кнопка) також не варто перевищувати 
межі кроку та кількості елементів, інакше доведеться перезапускати програму.


!!!коротко!!!

1. якщо із вбудованого графіка добре видно, починаючи з якого t_min і до кінця тексту 
(до t_max) можна проводити усереднення параметра v, тоді спочатку в програмі проводять
усереднення, а вже потім записують дані назовні.
   Тоді поля "each n raw", "first n raw" залишають порожніми, step=1, у "start from" 
заповнюють значення t_min і рахують сер. з-ня і с.к.в.
   Зауваження: такий підхід кращий за підхід у зовнішній програмі Minifier О. Романчука, 
написаній для онлайн-програми знаходження v(t) Л. Іваніцького. Адже в останньому 
підході спочатку викидають ("прополюють") багато точок, а вже потім по обрізаних 
даних у зовнішній програмі Minifier шукають сер. з-ня і с.к.в. А зараз у внутрішньому 
Minifier використовують ВСІ дані для пошуку сер. з-ня і с.к.в. 
   Нарешті записують дані в економний файл xls, обираючи з-ня "each n raw", "first n raw".

2. якщо із вбудованого графіка не видно, починаючи з якого t_min і до кінця тексту 
(до t_max) можна проводити усереднення параметра v, тоді спочатку в програмі записують 
дані назовні. Тоді спочатку заповнюють поля "each n raw", "first n raw" і зберігають 
файл. Вікно програми не закривають!
   Далі в зовнішній програмі (наприклад, Origin) будують графік v(t) і знаходять t_min 
(фаза коливань уточці t_min повинна дорівнювати фазі коливань в 
останній точці t_max).
   Далі беруть step=1, а в "start from" заповнюють значення t_min -- і рахують сер. 
з-ня і с.к.в.
   Потім записують в економний файл xls, обираючи потрібні з-ня "each n raw", "first n raw".

3. Для (1) запису в "економний" формат і/або (2) обчислення сер. з-ня і с.к.в. можна 
використати і зовнішню програму Minifier О. Романчука. 
Для цього треба спочатку записати в програмі мінімізований або повний файл даних. 
   Для запису повного файла можна не заповнювати поля "each n raw", "first n raw" -- чи ні?! 
Для повного запису всіх точок:
Чи "each n raw"=1, "first n raw"=к-кість точок?
чи "each n raw"=0, "first n raw"=0?
Чи "each n raw"0, "first n raw"=к-кість точок?
Чи якась інша комбінація?!
   Програма v(t) записує в формат xls, який треба перетворити до csv або навіть txt. 
   Здається, розділювачем має бути не tab  і не крапка з комою (про такий csv некоретно 
говорить мій Excel в опції запису до csv, хоча насправді запис іде із ";", а не ","), а 
кома!
   Це можна зробити вручну у Ворді, змінивши розширення файла csv на txt, замінивши 
";" на "," і зберігши файл як txt із кодуванням Windows. Зворотня зміна розширення на 
csv тоді не потрібна. Тепер програма Minifier О. Романчука порахує сер. з-ня і с.к.в. на 
даних нашої програми v(t).
